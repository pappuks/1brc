Timer unit: 1e-09 s

Total time: 1.35449 s
File: /Users/kuldeepsingh/Work/github/1brc/py_1brc_final.py
Function: process_chunk at line 36

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    36                                           @line_profiler.profile
    37                                           def process_chunk(chunk_start: int, chunk_end: int) -> Dict[bytes, List[float]]:
    38                                               """
    39                                               Process a chunk of the file and compute min, max, sum, and count of measurements for each location.
    40                                               Args:
    41                                                   chunk_start (int): The start position of the chunk.
    42                                                   chunk_end (int): The end position of the chunk.
    43                                               Returns:
    44                                                   Dict[bytes, List[float]]: A dictionary with location as key and a list of min, max, sum, and count as value.
    45                                               """
    46         1       1000.0   1000.0      0.0      chunk_size = chunk_end - chunk_start
    47         1       4000.0   4000.0      0.0      print("Start:", chunk_start, " End:", chunk_end)
    48         2      66000.0  33000.0      0.0      with open(file_path, "r+b") as file:
    49         1      14000.0  14000.0      0.0          mm = mmap.mmap(file.fileno(), length=chunk_size, access=mmap.ACCESS_READ, offset=chunk_start)
    50         1       1000.0   1000.0      0.0          if chunk_start != 0:
    51                                                       next_line(0, mm)
    52         1          0.0      0.0      0.0          result = dict()
    53   1000001  165406000.0    165.4     12.2          for line in iter(mm.readline, b""):
    54                                                       # if i >= chunk_end:
    55                                                       #     break
    56   1000000  214786000.0    214.8     15.9              location, temp_str = line.split(b";")
    57   1000000  134545000.0    134.5      9.9              measurement = float(temp_str)
    58   1000000  133048000.0    133.0      9.8              if location not in result:
    59       413      87000.0    210.7      0.0                  result[location] = [measurement, measurement, measurement, 1]  # min, max, sum, count
    60                                                       else:
    61    999587  120684000.0    120.7      8.9                  _result = result[location]
    62    999587  109299000.0    109.3      8.1                  if measurement < _result[0]:
    63      3017     360000.0    119.3      0.0                      _result[0] = measurement
    64    999587  140674000.0    140.7     10.4                  if measurement > _result[1]:
    65      2966     319000.0    107.6      0.0                      _result[1] = measurement
    66    999587  171273000.0    171.3     12.6                  _result[2] += measurement
    67    999587  163878000.0    163.9     12.1                  _result[3] += 1
    68         1      42000.0  42000.0      0.0          mm.close()
    69         1       2000.0   2000.0      0.0          return result

  1.35 seconds - /Users/kuldeepsingh/Work/github/1brc/py_1brc_final.py:36 - process_chunk
